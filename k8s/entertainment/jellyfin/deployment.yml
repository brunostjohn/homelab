apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: entertainment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      runtimeClassName: nvidia
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: jellyfin-config-pvc
        - name: jellyfin-cache
          persistentVolumeClaim:
            claimName: jellyfin-cache-pvc
        - name: entertainment-content
          persistentVolumeClaim:
            claimName: entertainment-content-pvc
      containers:
        - name: jellyfin
          image: docker.io/jellyfin/jellyfin:10.10.7
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
              nvidia.com/gpu.shared: "1"
            limits:
              memory: "4Gi"
              cpu: "2"
              nvidia.com/gpu.shared: "1"
          ports:
            - containerPort: 8096
              protocol: TCP
              name: http
          env:
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: all
            - name: TZ
              value: "Europe/Dublin"
          volumeMounts:
            - name: jellyfin-config
              mountPath: /config
            - name: jellyfin-cache
              mountPath: /cache
            - name: entertainment-content
              mountPath: /media
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            periodSeconds: 10
