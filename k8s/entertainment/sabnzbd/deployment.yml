apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd
  namespace: entertainment
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: sabnzbd
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - s1
                      - s2.m-nodes.zefirscloud.local
                      - s5
                      - s6.m-nodes.zefirscloud.local
      volumes:
        - name: entertainment-content
          persistentVolumeClaim:
            claimName: entertainment-content-pvc
        - name: sabnzbd-config
          persistentVolumeClaim:
            claimName: sabnzbd-config-pvc
      dnsConfig:
        nameservers:
          - 10.0.2.1
          - 1.1.1.1
          - 8.8.8.8
      securityContext:
        fsGroup: 1001
      containers:
        - name: sabnzbd
          image: lscr.io/linuxserver/sabnzbd:4.4.1
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: 2Gi
              cpu: "2"
            limits:
              memory: 4Gi
              cpu: "4"
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts:
            - name: entertainment-content
              mountPath: /data
            - name: sabnzbd-config
              mountPath: /config
          env:
            - name: PUID
              value: "1001"
            - name: PGID
              value: "1001"
            - name: TZ
              value: "Europe/Dublin"
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
