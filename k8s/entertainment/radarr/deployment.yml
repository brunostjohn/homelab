apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: entertainment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      volumes:
        - name: radarr-config
          persistentVolumeClaim:
            claimName: radarr-config
        - name: entertainment-content
          persistentVolumeClaim:
            claimName: entertainment-content-pvc
      containers:
        - name: radarr
          image: linuxserver/radarr:5.15.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 7878
              name: http
              protocol: TCP
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Dublin"
            - name: UMASK
              value: "002"
          volumeMounts:
            - name: radarr-config
              mountPath: /config
            - name: entertainment-content
              mountPath: /data
          startupProbe:
            httpGet:
              path: /ping
              port: http
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            failureThreshold: 5
            periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr-exporter
  namespace: entertainment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: radarr-exporter
  template:
    metadata:
      labels:
        app: radarr-exporter
    spec:
      containers:
        - name: radarr-exporter
          image: ghcr.io/onedr0p/exportarr:v2.0
          args:
            - radarr
          imagePullPolicy: IfNotPresent
          env:
            - name: PORT
              value: "9707"
            - name: URL
              value: "http://radarr.entertainment.svc.cluster.local:7878"
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: radarr-exporter
                  key: api-key
          ports:
            - name: monitoring
              containerPort: 9707
          livenessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            failureThreshold: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
